{
  "consumer": {
    "name": "Bikes UI"
  },
  "provider": {
    "name": "Bikes GraphQL Query"
  },
  "interactions": [
    {
      "description": "a request for bikes with reservations",
      "providerState": "a bike with reservation exists",
      "request": {
        "method": "post",
        "path": "/graphql",
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "query": "{\n  bikes{\n    edges{\n      node {\n        id,\n        model{\n          text\n        },\n        reservations {\n          cancelled,\n          user {\n            email\n          }\n        }\n      }\n    }\n  }\n}\n",
          "variables": null
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "data": {
            "bikes": {
              "edges": [
                {
                  "node": {
                    "id": "1",
                    "model": {
                      "text": "Mountain"
                    },
                    "reservations": [
                      {
                        "cancelled": false,
                        "user": {
                          "email": "boti@toptal.com"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        "matchingRules": {
          "$.body.data.bikes.edges[0].node.id": {
            "match": "type"
          },
          "$.body.data.bikes.edges[0].node.model.text": {
            "match": "type"
          },
          "$.body.data.bikes.edges[0].node.reservations[0].user.email": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "a request for bikes with reservations",
      "providerState": "a bike exists",
      "request": {
        "method": "post",
        "path": "/graphql",
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "query": "{\n  bikes{\n    edges{\n      node {\n        id,\n      }\n      cursor\n    },\n    pageInfo {\n      endCursor,\n      hasNextPage,\n      hasPreviousPage,\n      startCursor\n    },\n    totalCount\n  }\n}\n",
          "variables": null
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "data": {
            "bikes": {
              "edges": [
                {
                  "cursor": "cursor"
                }
              ],
              "pageInfo": {
                "endCursor": "cursor",
                "startCursor": "cursor",
                "hasNextPage": true,
                "hasPreviousPage": true
              },
              "totalCount": 1
            }
          }
        },
        "matchingRules": {
          "$.body.data.bikes.edges[0].cursor": {
            "match": "type"
          },
          "$.body.data.bikes.pageInfo.endCursor": {
            "match": "type"
          },
          "$.body.data.bikes.pageInfo.startCursor": {
            "match": "type"
          },
          "$.body.data.bikes.pageInfo.hasNextPage": {
            "match": "type"
          },
          "$.body.data.bikes.pageInfo.hasPreviousPage": {
            "match": "type"
          },
          "$.body.data.bikes.totalCount": {
            "match": "type"
          }
        }
      }
    }
  ],
  "metadata": {
    "pactSpecification": {
      "version": "2.0.0"
    }
  }
}